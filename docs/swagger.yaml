swagger: '2.0'
basePath: /api
paths:
  /models:
    get:
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/ModelMetadata'
      summary: Gets a list of all the models
      operationId: get_model_list
      tags:
        - models
    post:
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/TrainResult'
        '400':
          description: Invalid input
      summary: Creates and trains a model with given model class and hyperparameters
      operationId: post_model_list
      parameters:
        - name: payload
          required: true
          in: body
          schema:
            $ref: '#/definitions/ModelMetadata'
      tags:
        - models
  /models/{model_id}:
    parameters:
      - in: path
        description: The model ID
        name: model_id
        required: true
        type: integer
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModelMetadata'
        '400':
          description: Invalid input
        '404':
          description: Model does not exist
      summary: Gets a model with a given ID
      operationId: get_model
      tags:
        - models
    delete:
      responses:
        '204':
          description: Success
        '400':
          description: Invalid input
        '404':
          description: Model does not exist
      summary: Deletes a model with a given ID
      operationId: delete_model
      tags:
        - models
  /models/{model_id}/predict:
    parameters:
      - in: path
        description: The model ID
        name: model_id
        required: true
        type: integer
    post:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PredictionResult'
        '400':
          description: Invalid input
        '404':
          description: Model does not exist
      summary: Predicts the success of an applicant using a given model
      operationId: post_model_prediction
      parameters:
        - name: payload
          required: true
          in: body
          schema:
            $ref: '#/definitions/Applicant'
      tags:
        - models
info:
  title: Team SWEg API
  version: '1.0'
  description: API endpoints for a microservice that predicts potential applicant success using machine learning.
produces:
  - application/json
consumes:
  - application/json
tags:
  - name: models
    description: API endpoints to manage machine learning models
definitions:
  ModelMetadata:
    required:
      - learning_rate
      - model_class
    properties:
      model_class:
        type: string
        title: Model class
        description: The name of the model class
        example: logistic
        enum:
          - logistic
          - linear
      learning_rate:
        type: number
        title: Predicted success
        description: The success of the given applicant predicted by the model
      k:
        type: integer
        title: K-fold cross validation
        description: Value used in K-fold cross validation
        minimum: 1
    type: object
  TrainResult:
    required:
      - model_id
      - train_acc
    properties:
      model_id:
        type: integer
        title: Model ID
        description: The ID of the created model
        minimum: 1
      train_acc:
        type: number
        title: Training accuracy
        description: Model accuracy tested on training set
        minimum: 0
        maximum: 1
      valid_acc:
        type: number
        title: Validation accuracy
        description: Model accuracy tested on validation set
        minimum: 0
        maximum: 1
    type: object
  Applicant:
    properties:
      school:
        type: boolean
        title: School
        description: Student's school (true - Gabriel Pereira, false - Mousinho da Silveira)
      sex:
        type: boolean
        title: Sex
        description: Student's sex (true - female, false - male)
      age:
        type: integer
        title: Age
        description: Student's age
        minimum: 15
        maximum: 22
      address:
        type: boolean
        title: Address
        description: Student's home address type (true - urban, false - rural)
      family_size:
        type: boolean
        title: Family size
        description: Family size (true - <=3, false - >3)
      p_status:
        type: boolean
        title: P status
        description: Parent's cohabitation status (true - living together, false - apart)
      mother_edu:
        type: integer
        title: Mother's education
        description: Mother's education level (0 - none, 1 - 4th grade, 2 - 5~9th grade, 3 - secondary, 4 - higher)
        minimum: 0
        maximum: 4
      father_edu:
        type: integer
        title: Father's education
        description: Father's education level (0 - none, 1 - 4th grade, 2 - 5~9th grade, 3 - secondary, 4 - higher)
        minimum: 0
        maximum: 4
      mother_job:
        type: integer
        title: Mother's job
        description: Mother's job (0 - teacher, 1 - health-related, 2 - civil services, 3 - at home, 4 - other)
        minimum: 0
        maximum: 4
      father_job:
        type: integer
        title: Father's job
        description: Father's job (0 - teacher, 1 - health-related, 2 - civil services, 3 - at home, 4 - other)
        minimum: 0
        maximum: 4
      reason:
        type: integer
        title: Reason
        description: Reason to choose this school (0 - close to home, 1 - school reputation, 2 - course preference, 3 - other)
        minimum: 0
        maximum: 3
      guardian:
        type: integer
        title: Guardian
        description: Student's guardian (0 - mother, 1 - father, 2 - other)
        minimum: 0
        maximum: 2
      travel_time:
        type: integer
        title: Travel time
        description: Home to school travel time (0 - <15 min, 1 - 15~30 min, 2 - 30~60 min, 3 - >60 min)
        minimum: 0
        maximum: 3
      study_time:
        type: integer
        title: Study time
        description: Weekly study time (0 - <2 hrs, 1 - 2~5 hrs, 2 - 5~10 hrs, 3 - >10 hrs)
        minimum: 0
        maximum: 3
      failures:
        type: integer
        title: Failures
        description: Number of past class failures
        minimum: 1
        maximum: 4
      school_support:
        type: boolean
        title: School support
        description: Extra educational support (true - yes, false - no)
      family_support:
        type: boolean
        title: Family support
        description: Family educational support (true - yes, false - no)
      paid:
        type: boolean
        title: Paid
        description: Extra paid classes within the course subject (true - yes, false - no)
      activities:
        type: boolean
        title: Activities
        description: Participated in extra-curricular activities (true - yes, false - no)
      nursery:
        type: boolean
        title: Nursery
        description: Attended nursery school (true - yes, false - no)
      higher:
        type: boolean
        title: Higher
        description: Wants to take higher education (true - yes, false - no)
      Internet:
        type: boolean
        title: Internet
        description: Internet access at home (true - yes, false - no)
      Romantic:
        type: boolean
        title: Romantic
        description: With a romantic relationship (true - yes, false - no)
      family_rel:
        type: integer
        title: Family relationship
        description: Quality of family relationship
        minimum: 1
        maximum: 5
      free_time:
        type: integer
        title: Free time
        description: Free time after school
        minimum: 1
        maximum: 5
      going_out:
        type: integer
        title: Going out amount
        description: Going out with friends
        minimum: 1
        maximum: 5
      workday_alcohol:
        type: integer
        title: Alcohol (workday)
        description: Workday alcohol consumption
        minimum: 1
        maximum: 5
      weekend_alcohol:
        type: integer
        title: Alcohol (weekend)
        description: Weekend alcohol consumption
        minimum: 1
        maximum: 5
      health:
        type: integer
        title: Health
        description: Current health status
        minimum: 1
        maximum: 5
      absences:
        type: integer
        title: Absences
        description: Number of school absences
        minimum: 0
        maximum: 93
    type: object
  PredictionResult:
    required:
      - model_id
      - success
    properties:
      model_id:
        type: integer
        title: Model ID
        description: The ID of the model used to make prediction
        minimum: 1
      success:
        type: boolean
        title: Predicted success
        description: The success of the given applicant predicted by the model
    type: object
responses:
  ParseError:
    description: When a mask can't be parsed
  MaskError:
    description: When any error occurs on mask
